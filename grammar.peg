{
	var INSTRUCTION_INDEX = 1;
    var VARIABLE_INDEX = 3;
}

startrule
 = program
  
program
= (stringInstruction / 
	variableInstruction / 
	variableVariableAssignmentInstruction / 
	variableLiteralAssignmentInstruction)+
  
stringInstruction
= i:((whitespace*)? instruction space+ stringParam (whitespace*)?) { 
   var line = i;

    var tokParam = "";
    var tokInstr = line[INSTRUCTION_INDEX];
    var type= "stringInstruction";

    line[3][1].map(function(e){
      e.map(function(ec){
      tokParam += ec.join("");
      });
    });

    return {type, tokInstr,tokParam};
 }
 
variableInstruction
= i:((whitespace*)? instruction space+ ID (whitespace*)?) { 
   var line = i;

    var tokParam = line[VARIABLE_INDEX].join("");
    var tokInstr = line[INSTRUCTION_INDEX];
    var type= "variableInstruction";
    
    return {type, tokInstr,tokParam};
 }

word = letter+

letter = [a-zA-Z0-9]

whitespace = " "
/ "\r"
/ "\n"
/ "\t"

space = " "

newline = "\n"

variableVariableAssignmentInstruction = i:((whitespace*)?ID (whitespace)* "=" (whitespace)* ID (whitespace*)?) {
	var line = i;

    var tokLHS = line[1].join("");
    var tokRHS = line[5].join("");
    var type= "variableVariableAssignmentInstruction";
    
    return {type, tokLHS,tokRHS};
}

variableLiteralAssignmentInstruction = i:((whitespace*)? ID (whitespace)* "=" (whitespace)* stringParam (whitespace*)?) {
	var line = i;
	var tokRHS = "";
    var tokLHS = line[1].join("");
    var type= "variableLiteralAssignmentInstruction";
    
    line[5][1].map(function(e){
      e.map(function(ec){
      tokRHS += ec.join("");
      });
    });

    return {type, tokLHS,tokRHS};
}

instruction 
= log
 /alert

ID = word

stringParam = p:('"' (word (space*)?)* '"') { return p;}

log = "log"
alert = "alert"